[tool.poetry]
name = "pinefarm"
version = "0.0.0"
description = "Generate PineAPPL grids from PineCards."
authors = ["Alessandro Candido <candido.ale@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
click = "^8.0.1"
rich = "^12.5.1"
PyYAML = "^6.0.0"
yadism = "^0.11.3"
pandas = "^1.3.0"
lz4 = "^3.1.3"
breezy = "^3.2.1"
pkgconfig = "^1.5.5"
pygit2 = "1.9.2"
requests = "^2.26.0"
a3b2bbc3ced97675ac3a71df45f55ba = "^6.4.0"
lhapdf-management = "^0.2"
pineappl = "0.5.4"
more-itertools = "^8.10.0"
appdirs = "^1.4.4"
tomli = "^2.0.1"
# docs dependencies (for readthedocs)
Sphinx = { version = "^4.2.0", optional = true }
sphinx-rtd-theme = { version = "^1.0.0", optional = true }
sphinxcontrib-bibtex = { version = "^2.4.1", optional = true }
eko = { extras = ["box"], version = "^0.9.4" }


[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pylint = "^2.11.1"
pdbpp = "^0.10.3"
ipython = "^8.0"
Sphinx = "^4.2.0"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-bibtex = "^2.4.1"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "sphinxcontrib-bibtex"]

[tool.poetry.scripts]
pinefarm = "pinefarm:command"

[tool.poe.tasks]
test = "pytest tests"
coverage = "$BROWSER htmlcov/index.html"
test-cov = ["test", "coverage"]
lint = "pylint pinefarm -E"
lint-warnings = "pylint pinefarm --exit-zero"
ipy = "ipython"
test-mg5 = "pinefarm run TEST_RUN_SH theories/theory_213.yaml"
test-yad = "pinefarm run HERA_CC_318GEV_EM_SIGMARED theories/theory_213.yaml"
docs = { "shell" = "cd docs; make html" }
docs-view = { "shell" = "cd docs; make view" }
docs-clean = { "shell" = "cd docs; make clean" }
docs-cleanall = { "shell" = "cd docs; make cleanall" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ['tests/', 'benchmarks/']
python_files = ['test_*.py', 'benchmark_*.py']
python_classes = ['Test*', 'Benchmark*']
python_functions = ['test_*', 'benchmark_*']
addopts = [
  '--cov=pinefarm',
  '--cov-report=html',
  '--cov-report=xml',
  '--strict-markers',
]

[tool.pylint.master]
# extensions not to check
extension-pkg-whitelist = ["numpy", "lhapdf", "pygit2"]
ignore-paths = ["benchmarks/", "doc/", "tests/"]

[tool.pylint.messages_control]
disable = ["invalid-name", "fixme"]

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 10
